{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nexport default {\n  data() {\n    return {\n      speedruns: [],\n      countries: [{\n        value: \"不限\",\n        label: \"不限\"\n      }, {\n        value: \"cn\",\n        label: \"中国\"\n      }, {\n        value: \"us\",\n        label: \"美国\"\n      }, {\n        value: \"in\",\n        label: \"印度\"\n      }],\n      countryCode: \"cn\",\n      platforms: [{\n        value: \"不限\",\n        label: \"不限\"\n      }, {\n        value: \"PC\",\n        label: \"PC\"\n      }, {\n        value: \"Android\",\n        label: \"安卓\"\n      }, {\n        value: \"iOS\",\n        label: \"iOS\"\n      }],\n      platform: \"不限\",\n      categories: [\"Glitchless\", \"Snake\"],\n      category: \"Glitchless\",\n      onlyShowBest: true\n    };\n  },\n  computed: {\n    filteredSpeedruns() {\n      return this.speedruns.filter(speedrun => (this.countryCode === \"不限\" || speedrun.CountryCode === this.countryCode) && (this.platform === \"不限\" || speedrun.Platform === this.platform) && (this.category === \"不限\" || speedrun.Category === this.category) && (!this.onlyShowBest || this.platform != \"不限\" || speedrun.Fastest));\n    }\n  },\n  mounted() {\n    this.getSpeedruns();\n  },\n  methods: {\n    async getSpeedruns() {\n      const headers = new Headers({\n        \"X-LC-Id\": \"3Dec7Zyj4zLNDU0XukGcAYEk-gzGzoHsz\",\n        \"X-LC-Key\": \"uHF3AdKD4i3RqZB7w1APiFRF\",\n        \"Content-Type\": \"application/json\"\n      });\n      const options = {\n        method: \"GET\",\n        headers: headers\n      };\n      let params = {\n        order: \"TotalTime\",\n        keys: \"Player,Category,UID,TotalTime,Platform,Time,VideoPlatform,VID,Country,CountryCode,Fastest,-createdAt,-updatedAt,-objectId\"\n        //where: JSON.stringify(where),\n      };\n      const url = `https://3dec7zyj.lc-cn-n1-shared.com/1.1/classes/Speedrun?${new URLSearchParams(params)}`;\n      const response = await fetch(url, options);\n      this.speedruns = (await response.json()).results;\n      // console.log(this.speedruns);\n      this.speedruns.forEach(speedrun => {\n        switch (speedrun.VideoPlatform) {\n          case \"哔哩哔哩\":\n            speedrun.VideoURL = `https://www.bilibili.com/video/${speedrun.VID}`;\n            speedrun.PlayerURL = `https://space.bilibili.com/${speedrun.UID}`;\n            break;\n          case \"YouTube\":\n            speedrun.VideoURL = `https://www.youtube.com/watch?v=${speedrun.VID}`;\n            speedrun.PlayerURL = `https://www.youtube.com/channel/${speedrun.UID}`;\n            break;\n          default:\n            break;\n        }\n      });\n      //   this.speedruns = [...this.speedruns, ...this.speedruns];\n    },\n    freshTable() {\n      this.$nextTick(() => {\n        this.$refs.table.doLayout();\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","speedruns","countries","value","label","countryCode","platforms","platform","categories","category","onlyShowBest","computed","filteredSpeedruns","filter","speedrun","CountryCode","Platform","Category","Fastest","mounted","getSpeedruns","methods","headers","Headers","options","method","params","order","keys","url","URLSearchParams","response","fetch","json","results","forEach","VideoPlatform","VideoURL","VID","PlayerURL","UID","freshTable","$nextTick","$refs","table","doLayout"],"sources":["src/views/LeaderboardView.vue"],"sourcesContent":["<template>\r\n  <div class=\"leaderboard\">\r\n    <el-container>\r\n      <el-header>\r\n        <el-row type=\"flex\" justify=\"center\" align=\"middle\">\r\n          <el-col :span=\"1\">国家:</el-col>\r\n          <el-col :span=\"4\">\r\n            <el-select v-model=\"countryCode\">\r\n              <el-option\r\n                v-for=\"item in countries\"\r\n                :key=\"item.value\"\r\n                :label=\"item.label\"\r\n                :value=\"item.value\"\r\n              >\r\n              </el-option>\r\n            </el-select>\r\n          </el-col>\r\n          <el-col :span=\"1\">模式：</el-col>\r\n          <el-col :span=\"4\">\r\n            <el-select v-model=\"category\">\r\n              <el-option\r\n                v-for=\"category in categories\"\r\n                :key=\"category\"\r\n                :label=\"category\"\r\n                :value=\"category\"\r\n              >\r\n              </el-option>\r\n            </el-select>\r\n          </el-col>\r\n          <el-col :span=\"1.5\">游戏平台：</el-col>\r\n          <el-col :span=\"4\">\r\n            <el-select v-model=\"platform\">\r\n              <el-option\r\n                v-for=\"item in platforms\"\r\n                :key=\"item.value\"\r\n                :label=\"item.label\"\r\n                :value=\"item.value\"\r\n              >\r\n              </el-option>\r\n            </el-select>\r\n          </el-col>\r\n          <el-col :span=\"4\">仅显示玩家不同平台最好成绩</el-col>\r\n          <el-col :span=\"1\">\r\n            <el-switch v-model=\"onlyShowBest\"> </el-switch>\r\n          </el-col>\r\n        </el-row>\r\n        <el-divider> </el-divider>\r\n      </el-header>\r\n      <el-main>\r\n        <el-table\r\n          class=\"table\"\r\n          stripe\r\n          :data=\"filteredSpeedruns\"\r\n          style=\"width: 100%\"\r\n        >\r\n          <el-table-column label=\"排名\">\r\n            <template slot-scope=\"scope\">\r\n              {{ scope.$index + 1 }}\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"玩家\" style=\"\">\r\n            <template slot-scope=\"scope\">\r\n              <el-tooltip\r\n                v-if=\"scope.row.Country != '无'\"\r\n                :content=\"scope.row.Country\"\r\n                placement=\"top\"\r\n              >\r\n                <el-image\r\n                  class=\"flags\"\r\n                  :src=\"`https://www.speedrun.com/images/flags/${scope.row.CountryCode}.png`\"\r\n                  style=\"\r\n                    width: 18px;\r\n                    display: inline-flex;\r\n                    justify-content: center;\r\n                    text-align: center;\r\n                    margin: 5px;\r\n                  \"\r\n                  lazy\r\n                >\r\n                </el-image>\r\n              </el-tooltip>\r\n              <el-link\r\n                :href=\"scope.row.PlayerURL\"\r\n                target=\"_blank\"\r\n                style=\"display: inline-block\"\r\n                >{{ scope.row.Player }}</el-link\r\n              >\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"Platform\" label=\"游戏平台\"> </el-table-column>\r\n          <el-table-column prop=\"Time\" label=\"时间\"> </el-table-column>\r\n          <el-table-column label=\"视频地址\">\r\n            <template slot-scope=\"scope\">\r\n              <el-link :href=\"scope.row.VideoURL\" target=\"_blank\">{{\r\n                scope.row.VideoPlatform\r\n              }}</el-link>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </el-main>\r\n      <!-- <el-footer>\r\n        <el-pagination background layout=\"prev, pager, next\" :total=\"pageCount\">\r\n        </el-pagination>\r\n      </el-footer> -->\r\n    </el-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      speedruns: [],\r\n      countries: [\r\n        {\r\n          value: \"不限\",\r\n          label: \"不限\",\r\n        },\r\n        {\r\n          value: \"cn\",\r\n          label: \"中国\",\r\n        },\r\n        {\r\n          value: \"us\",\r\n          label: \"美国\",\r\n        },\r\n        {\r\n          value: \"in\",\r\n          label: \"印度\",\r\n        },\r\n      ],\r\n      countryCode: \"cn\",\r\n      platforms: [\r\n        {\r\n          value: \"不限\",\r\n          label: \"不限\",\r\n        },\r\n        {\r\n          value: \"PC\",\r\n          label: \"PC\",\r\n        },\r\n        {\r\n          value: \"Android\",\r\n          label: \"安卓\",\r\n        },\r\n        {\r\n          value: \"iOS\",\r\n          label: \"iOS\",\r\n        },\r\n      ],\r\n      platform: \"不限\",\r\n      categories: [\"Glitchless\", \"Snake\"],\r\n      category: \"Glitchless\",\r\n      onlyShowBest: true,\r\n    };\r\n  },\r\n  computed: {\r\n    filteredSpeedruns() {\r\n      return this.speedruns.filter(\r\n        (speedrun) =>\r\n          (this.countryCode === \"不限\" ||\r\n            speedrun.CountryCode === this.countryCode) &&\r\n          (this.platform === \"不限\" || speedrun.Platform === this.platform) &&\r\n          (this.category === \"不限\" || speedrun.Category === this.category) &&\r\n          (!this.onlyShowBest || this.platform != \"不限\" || speedrun.Fastest)\r\n      );\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getSpeedruns();\r\n  },\r\n  methods: {\r\n    async getSpeedruns() {\r\n      const headers = new Headers({\r\n        \"X-LC-Id\": \"3Dec7Zyj4zLNDU0XukGcAYEk-gzGzoHsz\",\r\n        \"X-LC-Key\": \"uHF3AdKD4i3RqZB7w1APiFRF\",\r\n        \"Content-Type\": \"application/json\",\r\n      });\r\n      const options = {\r\n        method: \"GET\",\r\n        headers: headers,\r\n      };\r\n      let params = {\r\n        order: \"TotalTime\",\r\n        keys: \"Player,Category,UID,TotalTime,Platform,Time,VideoPlatform,VID,Country,CountryCode,Fastest,-createdAt,-updatedAt,-objectId\",\r\n        //where: JSON.stringify(where),\r\n      };\r\n      const url = `https://3dec7zyj.lc-cn-n1-shared.com/1.1/classes/Speedrun?${new URLSearchParams(\r\n        params\r\n      )}`;\r\n      const response = await fetch(url, options);\r\n      this.speedruns = (await response.json()).results;\r\n      // console.log(this.speedruns);\r\n      this.speedruns.forEach((speedrun) => {\r\n        switch (speedrun.VideoPlatform) {\r\n          case \"哔哩哔哩\":\r\n            speedrun.VideoURL = `https://www.bilibili.com/video/${speedrun.VID}`;\r\n            speedrun.PlayerURL = `https://space.bilibili.com/${speedrun.UID}`;\r\n            break;\r\n          case \"YouTube\":\r\n            speedrun.VideoURL = `https://www.youtube.com/watch?v=${speedrun.VID}`;\r\n            speedrun.PlayerURL = `https://www.youtube.com/channel/${speedrun.UID}`;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n      //   this.speedruns = [...this.speedruns, ...this.speedruns];\r\n    },\r\n    freshTable() {\r\n      this.$nextTick(() => {\r\n        this.$refs.table.doLayout();\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.table {\r\n  width: 100%;\r\n}\r\n</style>"],"mappings":";;;AA6GA;EACAA,KAAA;IACA;MACAC,SAAA;MACAC,SAAA,GACA;QACAC,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,EACA;MACAC,WAAA;MACAC,SAAA,GACA;QACAH,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,EACA;MACAG,QAAA;MACAC,UAAA;MACAC,QAAA;MACAC,YAAA;IACA;EACA;EACAC,QAAA;IACAC,kBAAA;MACA,YAAAX,SAAA,CAAAY,MAAA,CACAC,QAAA,IACA,MAAAT,WAAA,aACAS,QAAA,CAAAC,WAAA,UAAAV,WAAA,MACA,KAAAE,QAAA,aAAAO,QAAA,CAAAE,QAAA,UAAAT,QAAA,MACA,KAAAE,QAAA,aAAAK,QAAA,CAAAG,QAAA,UAAAR,QAAA,MACA,MAAAC,YAAA,SAAAH,QAAA,YAAAO,QAAA,CAAAI,OAAA,CACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,YAAA;EACA;EACAC,OAAA;IACA,MAAAD,aAAA;MACA,MAAAE,OAAA,OAAAC,OAAA;QACA;QACA;QACA;MACA;MACA,MAAAC,OAAA;QACAC,MAAA;QACAH,OAAA,EAAAA;MACA;MACA,IAAAI,MAAA;QACAC,KAAA;QACAC,IAAA;QACA;MACA;MACA,MAAAC,GAAA,oEAAAC,eAAA,CACAJ,MACA;MACA,MAAAK,QAAA,SAAAC,KAAA,CAAAH,GAAA,EAAAL,OAAA;MACA,KAAAvB,SAAA,UAAA8B,QAAA,CAAAE,IAAA,IAAAC,OAAA;MACA;MACA,KAAAjC,SAAA,CAAAkC,OAAA,CAAArB,QAAA;QACA,QAAAA,QAAA,CAAAsB,aAAA;UACA;YACAtB,QAAA,CAAAuB,QAAA,qCAAAvB,QAAA,CAAAwB,GAAA;YACAxB,QAAA,CAAAyB,SAAA,iCAAAzB,QAAA,CAAA0B,GAAA;YACA;UACA;YACA1B,QAAA,CAAAuB,QAAA,sCAAAvB,QAAA,CAAAwB,GAAA;YACAxB,QAAA,CAAAyB,SAAA,sCAAAzB,QAAA,CAAA0B,GAAA;YACA;UACA;YACA;QACA;MACA;MACA;IACA;IACAC,WAAA;MACA,KAAAC,SAAA;QACA,KAAAC,KAAA,CAAAC,KAAA,CAAAC,QAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}