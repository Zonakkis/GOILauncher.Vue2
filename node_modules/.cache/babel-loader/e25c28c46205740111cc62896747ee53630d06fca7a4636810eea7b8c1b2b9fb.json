{"ast":null,"code":"export default {\n  data() {\n    return {\n      speedrun: {\n        Category: \"Glitchless\",\n        Platform: \"PC\",\n        VideoPlatform: \"哔哩哔哩\",\n        VID: \"\",\n        Player: \"\",\n        Minute: NaN,\n        Second: \"\",\n        MillionSecond: \"\"\n      },\n      rules: {\n        Time: {\n          validator: this.checkTime,\n          message: \"时间不能为空\",\n          trigger: \"blur\",\n          type: Boolean\n        }\n      },\n      videoIDName: \"哔哩哔哩视频链接（或BV号）\",\n      categories: [{\n        value: \"Glitchless\",\n        label: \"Glitchless\"\n      }, {\n        value: \"Snake\",\n        label: \"Snake\"\n      }],\n      platforms: [{\n        value: \"PC\",\n        label: \"PC\"\n      }, {\n        value: \"Android\",\n        label: \"安卓\"\n      }, {\n        value: \"IOS\",\n        label: \"IOS\"\n      }],\n      videoPlatforms: [{\n        value: \"哔哩哔哩\",\n        label: \"哔哩哔哩\"\n      }, {\n        value: \"YouTube\",\n        label: \"YouTube\"\n      }],\n      target: \"\",\n      targets: {\n        UID: \"UID\",\n        BVID: \"UID\"\n      }\n    };\n  },\n  mounted() {},\n  methods: {\n    async createRun(speedrun) {\n      const headers = new Headers({\n        \"X-LC-Id\": \"3Dec7Zyj4zLNDU0XukGcAYEk-gzGzoHsz\",\n        \"X-LC-Key\": \"uHF3AdKD4i3RqZB7w1APiFRF\",\n        \"Content-Type\": \"application/json\"\n      });\n      const options = {\n        method: \"POST\",\n        headers: headers,\n        body: JSON.stringify(speedrun)\n      };\n      const url = \"https://3dec7zyj.lc-cn-n1-shared.com/1.1/classes/PendingRun\";\n      const response = await fetch(url, options);\n      const result = await response.json();\n      console.log(result);\n    },\n    submitRun(speedrun) {\n      this.$refs[speedrun].validate(valid => {\n        if (valid) {\n          let found = false;\n          switch (this.speedrun.VideoPlatform) {\n            case \"哔哩哔哩\":\n              this.speedrun.VID.split(\"/\").forEach(str => {\n                if (str.startsWith(\"BV\")) {\n                  found = true;\n                  this.speedrun.VID = str;\n                }\n              });\n              if (!found) {\n                alert(`输入的${this.videoIDName}有误，请重新检查。`);\n                return;\n              }\n              break;\n            case \"YouTube\":\n              this.videoIDName = \"视频ID\";\n              break;\n          }\n          this.speedrun.TotalTime = this.speedrun.Minute * 60 + this.speedrun.Second + this.speedrun.Time / 1000;\n          console.log(this.speedrun.Second.type);\n          this.speedrun.Time = this.speedrun.Minute > 0 ? `${this.speedrun.Minute}分${this.speedrun.Second.toString().padStart(2, \"0\")}.${this.speedrun.MillionSecond.toString().padStart(3, \"0\")}秒` : `${this.speedrun.Second.toString().padStart(2, \"0\")}.${this.speedrun.MillionSecond.toString().padStart(3, \"0\")}秒`;\n          this.createRun(this.speedrun);\n          alert(\"提交成功！\");\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n    limitMin(val) {\n      this.speedrun.Min = val.replace(/[^\\d]/g, \"\");\n      console.log(val - 99);\n      if (Number.parseInt(val) > 99) {\n        this.speedrun.Min = 99;\n      } else if (val < 0) {\n        this.speedrun.Min = 0;\n      }\n    },\n    limitSecond(val) {\n      this.speedrun.Second = val.replace(/[^\\d]/g, \"\");\n      if (val > 59) {\n        this.speedrun.Second = 59;\n      } else if (val < 0) {\n        this.speedrun.Second = 0;\n      }\n    },\n    limitMillionSecond(val) {\n      this.speedrun.MillionSecond = val.replace(/[^\\d]/g, \"\");\n      if (val > 999) {\n        this.speedrun.MillionSecond = 999;\n      } else if (val < 0) {\n        this.speedrun.MillionSecond = 0;\n      }\n    },\n    changeVideoPlatform() {\n      console.log(this.speedrun.VideoPlatform);\n      switch (this.speedrun.VideoPlatform) {\n        case \"哔哩哔哩\":\n          this.videoIDName = \"哔哩哔哩视频链接（或BV号）\";\n          break;\n        case \"YouTube\":\n          this.videoIDName = \"YouTube视频链接（或视频ID）\";\n          break;\n      }\n    },\n    checkTime(rule, value, callback) {\n      if (this.speedrun.Minute.length <= 0 || this.speedrun.Second.length <= 0 || this.speedrun.MillionSecond.length <= 0) {\n        return callback(new Error(\"时间不能为空\"));\n      } else callback();\n    }\n  }\n};\n\n/*\r\nSESSDATA = e06ecc4f%2C1744732834%2C28938%2Aa1CjAUTVOCYUkRLYJqES-xqdv6Hj9GHtLnUJQyjfqksHzNWGdSVUqjjslX7kfGLTv9U3MSVm55ekxmaEZaakFFdHctYnJSdkxRUFNIeDh6YzNWUWJMX2pkRE9sdWwxZUgzTW8yUGhsOWFfYWNFeUhMSWkwVUVuNV80Q0Y1NkxSNWtST0JXN3dGU2dnIIEC\r\n*/","map":{"version":3,"names":["data","speedrun","Category","Platform","VideoPlatform","VID","Player","Minute","NaN","Second","MillionSecond","rules","Time","validator","checkTime","message","trigger","type","Boolean","videoIDName","categories","value","label","platforms","videoPlatforms","target","targets","UID","BVID","mounted","methods","createRun","headers","Headers","options","method","body","JSON","stringify","url","response","fetch","result","json","console","log","submitRun","$refs","validate","valid","found","split","forEach","str","startsWith","alert","TotalTime","toString","padStart","limitMin","val","Min","replace","Number","parseInt","limitSecond","limitMillionSecond","changeVideoPlatform","rule","callback","length","Error"],"sources":["src/views/SubmitRunView.vue"],"sourcesContent":["<template>\r\n  <div class=\"about\">\r\n    <el-form\r\n      :hide-required-asterisk=\"false\"\r\n      :model=\"speedrun\"\r\n      :rules=\"rules\"\r\n      ref=\"speedrun\"\r\n      label-width=\"250px\"\r\n      label-position=\"left\"\r\n    >\r\n      <el-form-item label=\"模式\">\r\n        <el-select v-model=\"speedrun.Category\" style=\"width: 100%\">\r\n          <el-option\r\n            v-for=\"category in categories\"\r\n            :key=\"category.value\"\r\n            :label=\"category.label\"\r\n            :value=\"category.value\"\r\n          >\r\n          </el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"游戏平台\">\r\n        <el-select v-model=\"speedrun.Platform\" style=\"width: 100%\">\r\n          <el-option\r\n            v-for=\"platform in platforms\"\r\n            :key=\"platform.value\"\r\n            :label=\"platform.label\"\r\n            :value=\"platform.value\"\r\n          >\r\n          </el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"视频平台\">\r\n        <el-select\r\n          v-model=\"speedrun.VideoPlatform\"\r\n          @change=\"changeVideoPlatform\"\r\n          style=\"width: 100%\"\r\n        >\r\n          <el-option\r\n            v-for=\"videoPlatform in videoPlatforms\"\r\n            :key=\"videoPlatform.value\"\r\n            :label=\"videoPlatform.label\"\r\n            :value=\"videoPlatform.value\"\r\n          >\r\n          </el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item\r\n        :label=\"videoIDName\"\r\n        prop=\"VID\"\r\n        :rules=\"[\r\n          {\r\n            required: true,\r\n            message: `${this.videoIDName}不能为空`,\r\n            trigger: 'blur',\r\n          },\r\n        ]\"\r\n      >\r\n        <el-input\r\n          v-model=\"speedrun.VID\"\r\n          :placeholder=\"`请输入${videoIDName}`\"\r\n          style=\"width: 100%\"\r\n        >\r\n        </el-input\r\n      ></el-form-item>\r\n      <el-form-item label=\"玩家（可选）\">\r\n        <el-input\r\n          v-model=\"speedrun.Player\"\r\n          placeholder=\"请输入玩家名字（仅供审核查看，通过后会改成视频平台用户名）\"\r\n          style=\"width: 100%\"\r\n        >\r\n        </el-input\r\n      ></el-form-item>\r\n      <el-form-item label=\"时间\" prop=\"Time\" style=\"width: 100%\">\r\n        <el-row>\r\n          <el-col :span=\"7\">\r\n            <el-input\r\n              v-model.number=\"speedrun.Minute\"\r\n              :Max=\"99\"\r\n              :Min=\"0\"\r\n              type=\"Number\"\r\n              @input=\"limitMin\"\r\n              style=\"width: 100%\"\r\n            >\r\n            </el-input>\r\n          </el-col>\r\n          <el-col :span=\"1\"> 分 </el-col>\r\n          <el-col :span=\"7\">\r\n            <el-input\r\n              v-model.number=\"speedrun.Second\"\r\n              Max=\"59\"\r\n              Min=\"0\"\r\n              type=\"Number\"\r\n              @input=\"limitSecond\"\r\n            >\r\n            </el-input>\r\n          </el-col>\r\n          <el-col :span=\"1\"> . </el-col>\r\n          <el-col :span=\"7\">\r\n            <el-input\r\n              v-model.number=\"speedrun.MillionSecond\"\r\n              :Max=\"999\"\r\n              :Min=\"0\"\r\n              type=\"number\"\r\n              @input=\"limitMillionSecond\"\r\n            >\r\n            </el-input>\r\n          </el-col>\r\n          <el-col :span=\"1\"> 秒 </el-col>\r\n        </el-row>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"submitRun('speedrun')\"\r\n          >提交</el-button\r\n        >\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n  \r\n  <script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      speedrun: {\r\n        Category: \"Glitchless\",\r\n        Platform: \"PC\",\r\n        VideoPlatform: \"哔哩哔哩\",\r\n        VID: \"\",\r\n        Player: \"\",\r\n        Minute: NaN,\r\n        Second: \"\",\r\n        MillionSecond: \"\",\r\n      },\r\n      rules: {\r\n        Time: {\r\n          validator: this.checkTime,\r\n          message: \"时间不能为空\",\r\n          trigger: \"blur\",\r\n          type: Boolean,\r\n        },\r\n      },\r\n      videoIDName: \"哔哩哔哩视频链接（或BV号）\",\r\n      categories: [\r\n        {\r\n          value: \"Glitchless\",\r\n          label: \"Glitchless\",\r\n        },\r\n        {\r\n          value: \"Snake\",\r\n          label: \"Snake\",\r\n        },\r\n      ],\r\n      platforms: [\r\n        {\r\n          value: \"PC\",\r\n          label: \"PC\",\r\n        },\r\n        {\r\n          value: \"Android\",\r\n          label: \"安卓\",\r\n        },\r\n        {\r\n          value: \"IOS\",\r\n          label: \"IOS\",\r\n        },\r\n      ],\r\n      videoPlatforms: [\r\n        {\r\n          value: \"哔哩哔哩\",\r\n          label: \"哔哩哔哩\",\r\n        },\r\n        {\r\n          value: \"YouTube\",\r\n          label: \"YouTube\",\r\n        },\r\n      ],\r\n      target: \"\",\r\n      targets: {\r\n        UID: \"UID\",\r\n        BVID: \"UID\",\r\n      },\r\n    };\r\n  },\r\n  mounted() {},\r\n  methods: {\r\n    async createRun(speedrun) {\r\n      const headers = new Headers({\r\n        \"X-LC-Id\": \"3Dec7Zyj4zLNDU0XukGcAYEk-gzGzoHsz\",\r\n        \"X-LC-Key\": \"uHF3AdKD4i3RqZB7w1APiFRF\",\r\n        \"Content-Type\": \"application/json\",\r\n      });\r\n      const options = {\r\n        method: \"POST\",\r\n        headers: headers,\r\n        body: JSON.stringify(speedrun),\r\n      };\r\n      const url = \"https://3dec7zyj.lc-cn-n1-shared.com/1.1/classes/PendingRun\";\r\n      const response = await fetch(url, options);\r\n      const result = await response.json();\r\n      console.log(result);\r\n    },\r\n    submitRun(speedrun) {\r\n      this.$refs[speedrun].validate((valid) => {\r\n        if (valid) {\r\n          let found = false;\r\n          switch (this.speedrun.VideoPlatform) {\r\n            case \"哔哩哔哩\":\r\n              this.speedrun.VID.split(\"/\").forEach((str) => {\r\n                if (str.startsWith(\"BV\")) {\r\n                  found = true;\r\n                  this.speedrun.VID = str;\r\n                }\r\n              });\r\n              if (!found) {\r\n                alert(`输入的${this.videoIDName}有误，请重新检查。`);\r\n                return;\r\n              }\r\n              break;\r\n            case \"YouTube\":\r\n              this.videoIDName = \"视频ID\";\r\n              break;\r\n          }\r\n          this.speedrun.TotalTime =\r\n            this.speedrun.Minute * 60 +\r\n            this.speedrun.Second +\r\n            this.speedrun.Time / 1000;\r\n          console.log(this.speedrun.Second.type);\r\n          this.speedrun.Time =\r\n            this.speedrun.Minute > 0\r\n              ? `${\r\n                  this.speedrun.Minute\r\n                }分${this.speedrun.Second.toString().padStart(\r\n                  2,\r\n                  \"0\"\r\n                )}.${this.speedrun.MillionSecond.toString().padStart(3, \"0\")}秒`\r\n              : `${this.speedrun.Second.toString().padStart(\r\n                  2,\r\n                  \"0\"\r\n                )}.${this.speedrun.MillionSecond.toString().padStart(\r\n                  3,\r\n                  \"0\"\r\n                )}秒`;\r\n          this.createRun(this.speedrun);\r\n          alert(\"提交成功！\");\r\n        } else {\r\n          console.log(\"error submit!!\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    limitMin(val) {\r\n      this.speedrun.Min = val.replace(/[^\\d]/g, \"\");\r\n      console.log(val-99);\r\n      if (Number.parseInt(val) > 99) {\r\n        this.speedrun.Min = 99;\r\n      } else if (val < 0) {\r\n        this.speedrun.Min = 0;\r\n      }\r\n    },\r\n    limitSecond(val) {\r\n      this.speedrun.Second = val.replace(/[^\\d]/g, \"\");\r\n      if (val > 59) {\r\n        this.speedrun.Second = 59;\r\n      } else if (val < 0) {\r\n        this.speedrun.Second = 0;\r\n      }\r\n    },\r\n    limitMillionSecond(val) {\r\n      this.speedrun.MillionSecond = val.replace(/[^\\d]/g, \"\");\r\n      if (val > 999) {\r\n        this.speedrun.MillionSecond = 999;\r\n      } else if (val < 0) {\r\n        this.speedrun.MillionSecond = 0;\r\n      }\r\n    },\r\n    changeVideoPlatform() {\r\n      console.log(this.speedrun.VideoPlatform);\r\n      switch (this.speedrun.VideoPlatform) {\r\n        case \"哔哩哔哩\":\r\n          this.videoIDName = \"哔哩哔哩视频链接（或BV号）\";\r\n          break;\r\n        case \"YouTube\":\r\n          this.videoIDName = \"YouTube视频链接（或视频ID）\";\r\n          break;\r\n      }\r\n    },\r\n    checkTime(rule, value, callback) {\r\n      if (\r\n        this.speedrun.Minute.length <= 0 ||\r\n        this.speedrun.Second.length <= 0 ||\r\n        this.speedrun.MillionSecond.length <= 0\r\n      ) {\r\n        return callback(new Error(\"时间不能为空\"));\r\n      } else callback();\r\n    },\r\n  },\r\n};\r\n\r\n/*\r\nSESSDATA = e06ecc4f%2C1744732834%2C28938%2Aa1CjAUTVOCYUkRLYJqES-xqdv6Hj9GHtLnUJQyjfqksHzNWGdSVUqjjslX7kfGLTv9U3MSVm55ekxmaEZaakFFdHctYnJSdkxRUFNIeDh6YzNWUWJMX2pkRE9sdWwxZUgzTW8yUGhsOWFfYWNFeUhMSWkwVUVuNV80Q0Y1NkxSNWtST0JXN3dGU2dnIIEC\r\n*/\r\n</script>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}